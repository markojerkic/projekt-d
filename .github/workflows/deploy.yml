name: Build and Deploy Services
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
env:
  DISCOVERY_IMAGE: discovery-server
  EXAMPLE_IMAGE: example-server-1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        cd custom-load-balancer
        mvn clean install

    - name: Build Discovery Server JAR
      run: |
        cd custom-load-balancer/discovery-server
        mvn clean package -DskipTests

    - name: Build Discovery Server Image
      uses: docker/build-push-action@v5
      with:
        context: ./custom-load-balancer/discovery-server
        file: ./custom-load-balancer/discovery-server/Dockerfile
        load: true
        tags: ${{ env.DISCOVERY_IMAGE }}:latest

    - name: Build Example Server JAR
      run: |
        cd custom-load-balancer/examples/example-server-1
        mvn clean package -DskipTests

    - name: Build Example Server Image
      uses: docker/build-push-action@v5
      with:
        context: ./custom-load-balancer/examples/example-server-1
        file: ./custom-load-balancer/examples/example-server-1/Dockerfile
        load: true
        tags: ${{ env.EXAMPLE_IMAGE }}:latest

    - name: Install flyctl
      if: github.event_name != 'pull_request'
      uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Deploy Discovery Server to fly.io
      if: github.event_name != 'pull_request'
      run: |
        cd custom-load-balancer/discovery-server
        flyctl deploy --local-only --image ${{ env.DISCOVERY_IMAGE }}:latest
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

    - name: Deploy Example Server to fly.io
      if: github.event_name != 'pull_request'
      run: |
        cd custom-load-balancer/examples/example-server-1
        flyctl deploy --local-only --image ${{ env.EXAMPLE_IMAGE }}:latest
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
